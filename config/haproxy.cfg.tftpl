global
    stats socket /run/haproxy-stats.sock mode 600 level admin
%{ for name, bind in lb_binding ~}
    stats socket ipv4@${bind.ip}:5999 level admin
%{ endfor ~}
    stats timeout 10m
    stats maxconn 20
    log stdout format short local0
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    maxconn 2000

defaults
    log global
    option tcplog
    option clitcpka             # TCP keep-alive on the client side
    clitcpka-idle 20s
    clitcpka-cnt 5
    clitcpka-intvl 1s
    option srvtcpka             # TCP keep-alive on the server side
    srvtcpka-idle 20s
    srvtcpka-cnt 5
    srvtcpka-intvl 1s
    mode tcp
    timeout connect 5s
    timeout queue 200ms
    timeout client 10m
    timeout client-fin 30s
    timeout server 10m
    timeout server-fin 30s
    timeout tunnel 24d          # This has to cover the longest SQL statement.
                                # PG never closes a connection on its own.
                                # So why should we?
                                # 24d is the maximum that fits into a signed
                                # 4 bytes int.

%{ for name, bind in lb_binding ~}
# ${name}
frontend ${name}
    bind ${bind["ip"]}:${bind["port"]} tcp-ut 25s    # should be <= tcpka-idle + tcpka-intvl * tcpka-cnt
    default_backend ${name}

backend ${name}
%{ for dbname, dbserver in bind.backend ~}
    # ${dbname}
    server db ${dbserver} tcp-ut 25s    # should be <= tcpka-idle + tcpka-intvl * tcpka-cnt
%{ endfor ~}
%{ endfor ~}
